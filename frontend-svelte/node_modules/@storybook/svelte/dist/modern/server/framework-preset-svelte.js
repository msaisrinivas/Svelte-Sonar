function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import "core-js/modules/es.promise.js";
import { findDistEsm } from '@storybook/core-common';
export async function webpack(config, options) {
  var _await$options$preset = await options.presets.apply('svelteOptions', {}, options),
      _await$options$preset2 = _await$options$preset.preprocess,
      preprocess = _await$options$preset2 === void 0 ? undefined : _await$options$preset2,
      _await$options$preset3 = _await$options$preset.loader,
      loader = _await$options$preset3 === void 0 ? {} : _await$options$preset3;

  var mainFields = config.resolve.mainFields || ['browser', 'module', 'main'];
  return _objectSpread(_objectSpread({}, config), {}, {
    module: _objectSpread(_objectSpread({}, config.module), {}, {
      rules: [...config.module.rules, {
        test: /\.(svelte|html)$/,
        loader: require.resolve('svelte-loader'),
        options: _objectSpread({
          preprocess: preprocess
        }, loader)
      }]
    }),
    resolve: _objectSpread(_objectSpread({}, config.resolve), {}, {
      extensions: [...config.resolve.extensions, '.svelte'],
      alias: config.resolve.alias,
      mainFields: ['svelte', ...mainFields]
    })
  });
}
export async function babelDefault(config) {
  return _objectSpread(_objectSpread({}, config), {}, {
    presets: [...((config === null || config === void 0 ? void 0 : config.presets) || [])],
    plugins: [...((config === null || config === void 0 ? void 0 : config.plugins) || [])]
  });
}
export var previewAnnotations = function (entry = []) {
  return [...entry, findDistEsm(__dirname, 'client/preview/config')];
};