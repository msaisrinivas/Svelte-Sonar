"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createRegistrationContext = createRegistrationContext;
exports.createRenderContext = createRenderContext;
exports.useContext = useContext;

var _svelte = require("svelte");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var CONTEXT_KEY = "storybook-registration-context";

function createRenderContext() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  (0, _svelte.setContext)(CONTEXT_KEY, _objectSpread({
    render: true,
    register: function register() {},
    meta: {},
    args: {}
  }, props));
}

function createRegistrationContext(repositories) {
  (0, _svelte.setContext)(CONTEXT_KEY, {
    render: false,
    register: function register(story) {
      repositories.stories.push(story);
    },

    set meta(value) {
      // eslint-disable-next-line no-param-reassign
      repositories.meta = value;
    },

    args: {}
  });
}

function useContext() {
  if (!(0, _svelte.hasContext)(CONTEXT_KEY)) {
    createRenderContext();
  }

  return (0, _svelte.getContext)(CONTEXT_KEY);
}